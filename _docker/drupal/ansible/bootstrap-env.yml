#
# This playbook gets the environment ready to the point where we can start to bootstrap Drupal. It ensures
# we have a working directory for our deployment, creates a database for the deployment and templates any
# required files for mounting into the Drupal container.
#
---
- hosts: localhost
  connection: local
  vars:
    - work_dir: "/drupal-workspace/{{ drupal_deployment_dir }}/work"
  vars_files:
    - "/credentials/ansible/env.yml"
    - 'vars/{{ rhdp_environment }}/drupal/vars.yml'
  become: no
  tasks:
    - name: Create the working directory structure for this deployment of Drupal
      file:
        path: '{{ item }}'
        group: 'root'
        state: directory
        recurse: yes
        mode: 0775
      with_items:
        - '{{ work_dir }}'
        - '/drupal-workspace/{{ drupal_deployment_dir }}/seed'
        - '/drupal-workspace/{{ drupal_deployment_dir }}/drupal/files'
        - '/drupal-workspace/{{ drupal_deployment_dir }}/drupal/config'
        - '/drupal-workspace/{{ drupal_deployment_dir }}/drupal/credentials'

    - name: Create the database for this deployment
      mysql_db:
        name: '{{ drupal_deployment_dir }}'
        state: present
        login_password: '{{ drupal_db_password }}'
        login_user: '{{ drupal_db_user }}'
        login_host: '{{ drupal_db_host }}'

    - name: Check for presence of Drupal tables in the database
      shell: "mysql -sN -h {{ drupal_db_host }} -u {{ drupal_db_user }} -p{{ drupal_db_password }} -e \"select count(*) from information_schema.tables where table_schema = '{{ drupal_deployment_dir }}' and table_name in ('lightning_node','lightning_node__body','lightning_taxonomy_index')\" {{ drupal_deployment_dir }}"
      register: drupal_db

    - name: Import the most recent Drupal database dump into the database for this deployment
      mysql_db:
        name: '{{ drupal_deployment_dir }}'
        state: import
        target: '/drupal-workspace/{{ drupal_deployment_dir }}/seed/db/drupal-db-sql.gz'
        login_host: '{{ drupal_db_host }}'
        login_user: '{{ drupal_db_user }}'
        login_password: '{{ drupal_db_password }}'
      when: drupal_db.rc == 0 and drupal_db.stdout != "3"

    #
    # TODO - do we really need to do this for every deployment? The only thing we're using from the repo is the /images
    # directory. Probably better to bake that into the Docker image on each build as it's only 19 meg.
    #
    - name: Clone the developers.redhat.com Git repository into the working directory of this deployment
      git:
        depth: 1
        dest: '/drupal-workspace/{{ drupal_deployment_dir }}/developers.redhat.com'
        force: yes
        recursive: no
        repo: '{{ rhdp_git_repo }}'
        version: '{{ rhdp_git_branch }}'
        update: no

    - name: Template the rhd.settings.php for mounting into Drupal
      template:
        src: 'templates/{{ rhdp_environment }}/drupal/rhd.settings.php.j2'
        dest: '/drupal-workspace/{{ drupal_deployment_dir }}/drupal/credentials/rhd.settings.php'
        group: 'root'
        mode: 0770
        force: no

    - name: Template the rhd.settings.yml for mounting into Drupal
      template:
        src: 'templates/{{ rhdp_environment }}/drupal/rhd.settings.yml.j2'
        dest: '/drupal-workspace/{{ drupal_deployment_dir }}/drupal/credentials/rhd.settings.yml'
        group: 'root'
        mode: 0770
        force: no
